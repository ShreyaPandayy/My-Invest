{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/types/contact-us.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const ContactUsInputSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  email: z.string().email(\"Please enter a valid email.\"),\n  subject: z.string().min(5, \"Subject must be at least 5 characters.\"),\n  message: z.string().min(10, \"Message must be at least 10 characters.\").max(500, \"Message cannot exceed 500 characters.\"),\n});\nexport type ContactUsInput = z.infer<typeof ContactUsInputSchema>;\nexport type ContactFormValues = z.infer<typeof ContactUsInputSchema>;\n\nexport const ContactUsOutputSchema = z.object({\n  category: z.string().describe('The determined category of the inquiry (e.g., Billing, Technical Support, General Feedback).'),\n  priority: z.enum(['Low', 'Medium', 'High']).describe('The assigned priority level.'),\n});\nexport type ContactUsOutput = z.infer<typeof ContactUsOutputSchema>;\n"],"names":[],"mappings":";;;;AACA;;AAEO,MAAM,uBAAuB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,MAAM,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,OAAO,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,SAAS,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,2CAA2C,GAAG,CAAC,KAAK;AAClF;AAIO,MAAM,wBAAwB,kKAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,UAAU,kKAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,UAAU,kKAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAU;KAAO,EAAE,QAAQ,CAAC;AACvD","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/ai/flows/contact-us-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI flow for processing contact form submissions.\n *\n * - contactUsFlow - A function that handles the contact form submission process.\n * - ContactUsInput - The input type for the contactUsFlow function.\n * - ContactUsOutput - The return type for the contactUsFlow function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport { ContactUsInputSchema, ContactUsOutputSchema, type ContactUsInput, type ContactUsOutput } from '@/types/contact-us';\n\n\nexport async function contactUsFlow(input: ContactUsInput): Promise<ContactUsOutput> {\n    return contactUsFlowInternal(input);\n}\n\nconst contactUsPrompt = ai.definePrompt({\n    name: 'contactUsPrompt',\n    input: { schema: ContactUsInputSchema },\n    output: { schema: ContactUsOutputSchema },\n    prompt: `You are an AI assistant for a financial investment platform. Your task is to analyze an incoming user inquiry from a contact form and categorize it.\n\n    Analyze the provided message details:\n    - From: {{{name}}} <{{{email}}}>\n    - Subject: {{{subject}}}\n    - Message: {{{message}}}\n\n    Based on the subject and message, determine the most appropriate category for this inquiry. Categories can include, but are not limited to: \"Billing & Subscriptions\", \"Technical Support\", \"Account Management\", \"Investment Advice Request\", or \"General Feedback\".\n\n    Also, assign a priority level:\n    - \"High\": for urgent issues like account lockouts, failed transactions, or security concerns.\n    - \"Medium\": for service-related questions, and non-urgent issues.\n    - \"Low\": for general feedback, suggestions, or non-critical inquiries.\n\n    Provide the output in the requested JSON format.\n    `,\n});\n\n\nconst contactUsFlowInternal = ai.defineFlow(\n  {\n    name: 'contactUsFlow',\n    inputSchema: ContactUsInputSchema,\n    outputSchema: ContactUsOutputSchema,\n  },\n  async (input) => {\n    const { output } = await contactUsPrompt(input);\n    if (!output) {\n      throw new Error('Failed to get a response from the AI model.');\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;;;;;;AAGO,eAAe,cAAc,KAAqB;IACrD,OAAO,sBAAsB;AACjC;AAEA,MAAM,kBAAkB,4GAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACpC,MAAM;IACN,OAAO;QAAE,QAAQ,sHAAA,CAAA,uBAAoB;IAAC;IACtC,QAAQ;QAAE,QAAQ,sHAAA,CAAA,wBAAqB;IAAC;IACxC,QAAQ,CAAC;;;;;;;;;;;;;;;IAeT,CAAC;AACL;AAGA,MAAM,wBAAwB,4GAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa,sHAAA,CAAA,uBAAoB;IACjC,cAAc,sHAAA,CAAA,wBAAqB;AACrC,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,gBAAgB;IACzC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;;;IAvCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/.next-internal/server/app/contact/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {contactUsFlow as '4032f92032bf19f60d885b4d6577bd6f754608f3e4'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/app/contact/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/contact/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/contact/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/app/contact/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/contact/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/contact/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,kCACA","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}