{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/ai/flows/market-trend-summaries.ts"],"sourcesContent":["\n// This is an autogenerated file from Firebase Studio.\n\n'use server';\n\n/**\n * @fileOverview Generates summaries of potential market trends using an AI-powered tool.\n *\n * - getMarketTrendSummaries - A function that generates market trend summaries.\n * - MarketTrendSummariesInput - The input type for the getMarketTrendSummaries function.\n * - MarketTrendSummariesOutput - The return type for the getMarketTrendSummaries function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MarketTrendSummariesInputSchema = z.object({\n  marketData: z.string().describe('The current market data to analyze.'),\n});\nexport type MarketTrendSummariesInput = z.infer<typeof MarketTrendSummariesInputSchema>;\n\nconst MarketTrendSummariesOutputSchema = z.object({\n  trendSummary: z.string().describe('A summary of potential market trends.'),\n});\nexport type MarketTrendSummariesOutput = z.infer<typeof MarketTrendSummariesOutputSchema>;\n\nexport async function getMarketTrendSummaries(input: MarketTrendSummariesInput): Promise<MarketTrendSummariesOutput> {\n  return marketTrendSummariesFlow(input);\n}\n\nconst analyzeMarketDataTool = ai.defineTool({\n  name: 'analyzeMarketData',\n  description: 'Analyzes the provided market data to identify potential trends.',\n  inputSchema: z.object({\n    marketData: z.string().describe('The market data to analyze.'),\n  }),\n  outputSchema: z.string().describe('A summary of potential market trends.'),\n}, async (input) => {\n  // Placeholder implementation for market data analysis.\n  // Replace this with actual market analysis logic.\n  return `Analyzed market data: ${input.marketData}. Potential trends identified.`\n});\n\nconst marketTrendSummariesPrompt = ai.definePrompt({\n  name: 'marketTrendSummariesPrompt',\n  tools: [analyzeMarketDataTool],\n  input: {schema: MarketTrendSummariesInputSchema},\n  output: {schema: MarketTrendSummariesOutputSchema},\n  prompt: `You are an AI-powered tool that analyzes market data and provides summaries of potential market trends.\n\n  Analyze the provided market data using the analyzeMarketData tool and generate a concise summary of potential market trends.\n\n  Market Data: {{{marketData}}}\n  `,\n});\n\nconst marketTrendSummariesFlow = ai.defineFlow(\n  {\n    name: 'marketTrendSummariesFlow',\n    inputSchema: MarketTrendSummariesInputSchema,\n    outputSchema: MarketTrendSummariesOutputSchema,\n  },\n  async input => {\n    const {output} = await marketTrendSummariesPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AACA,sDAAsD;;;;;;AAItD;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAClC;AAGA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAGO,eAAe,wBAAwB,KAAgC;IAC5E,OAAO,yBAAyB;AAClC;AAEA,MAAM,wBAAwB,4GAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAC1C,MAAM;IACN,aAAa;IACb,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACpB,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC;IACA,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC,GAAG,OAAO;IACR,uDAAuD;IACvD,kDAAkD;IAClD,OAAO,CAAC,sBAAsB,EAAE,MAAM,UAAU,CAAC,8BAA8B,CAAC;AAClF;AAEA,MAAM,6BAA6B,4GAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACjD,MAAM;IACN,OAAO;QAAC;KAAsB;IAC9B,OAAO;QAAC,QAAQ;IAA+B;IAC/C,QAAQ;QAAC,QAAQ;IAAgC;IACjD,QAAQ,CAAC;;;;;EAKT,CAAC;AACH;AAEA,MAAM,2BAA2B,4GAAA,CAAA,KAAE,CAAC,UAAU,CAC5C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,2BAA2B;IAClD,OAAO;AACT;;;IAvCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMarketTrendSummaries as '40a244bd7d41c61b6adc36baf3e38261e1a2567871'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/hp/Downloads/MeInvest-main/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0BACA","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}